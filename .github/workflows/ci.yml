name: Good Night App CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: good_night_app_test
        ports:
          - 5432:5432
        # Health checks to ensure postgres is ready before running tests
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Set up database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/good_night_app_test
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run tests with coverage
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/good_night_app_test
          REDIS_URL: redis://localhost:6379/1
          COVERAGE: true
          SIMPLECOV_FORMATTER: SimpleCov::Formatter::JSONFormatter
        run: bundle exec rspec

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage/
          retention-days: 14

      - name: Verify test coverage meets threshold
        run: |
          if bundle exec ruby -e 'require "json"; exit(JSON.parse(File.read("coverage/.resultset.json"))["RSpec"]["coverage_percent"] < 90 ? 1 : 0)'; then
            echo "Test coverage is below 90%. Please add more tests."
            exit 1
          fi
      
  build_docker:
    runs-on: ubuntu-latest
    needs: [scan_ruby, lint, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: good_night_app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Verify Docker image
        run: |
          docker image ls
          docker run --rm good_night_app:latest rails -v

